import XCTest
import CoreData
@testable import TravelWeather



class CDQueryTests: XCTestCase,
    {% for type in types.types|protocol where type.implements.AutoQueryTestProtocol and type.name != "CDAction" %}
    {{ type.name }}{% if not forloop.last %}, {% endif %}
    {% endfor %}
{
    
    typealias Dependencies = TestDependencies
    var dependencies: Dependencies!

    override func setUpWithError() throws {
        self.dependencies = TestDependencies()
    }
    
    
    {% for type in types.types|protocol where type.implements.AutoQueryTestProtocol and type.name != "CDAction" %}
    
    // MARK: - {{ type.name Tests }}
    {% for method in type.methods where method|annotated:"testableQuery" and method.actualReturnTypeName|contains:"NSFetchRequest" %}
    
    func test_{{ method.callName }}IsValid() throws {
        let query = {{ method.callName }}() // {{ method.returnTypeName }}
        try dependencies.cdStack.saveContext.performAndWait {
            _ = try self.dependencies.cdStack.saveContext.fetch(query)
        }
    }
    
    {% endfor %}
    
    {% endfor %}
    
}
