import Foundation

{% for type in types.implementing.AutoInitializable %}

extension {{ type.name }} {

    /// Acts as a proper initializer that forces the compiler to check if all attributes
    /// have been set correctly.
    /// - note: If you want to copy values from another entity, you may want to check __copied(valuesFrom:)__ 
    func safeInit(
        {% for property in type.storedVariables %}
        {% if forloop.last %}
        {{ property.name }}: {{ property.typeName }}
        {% else %}
        {{ property.name }}: {{ property.typeName }},
        {% endif %}
        {% endfor %}
    ) {
        {% for property in type.storedVariables %}
        self.{{ property.name }} = {{ property.name }}
        {% endfor %}
    }
    
    
    /// Acts as a proper initializer that forces the compiler to check if all attributes
    /// have been set correctly.
    /// - note: This init does not concern itself with relationships. You will have to set these yourself.
    func safeInitNeglectRelationShips(
        {% for property in type.storedVariables|!annotated:"relationship" %}
        {% if forloop.last %}
        {{ property.name }}: {{ property.typeName }}
        {% else %}
        {{ property.name }}: {{ property.typeName }},
        {% endif %}
        {% endfor %}
    ) {
        {% for property in type.storedVariables|!annotated:"relationship" %}
        self.{{ property.name }} = {{ property.name }}
        {% endfor %}
    }
    
}
{% endfor %}


        
